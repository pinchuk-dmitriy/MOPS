	Задача  о  максимальном  потоке(заключается в нахождении такого потока, что величина потока максимальна)
В первом задании нам дана транспортная сеть с максимальными пропускными способностями в обоих направлениях.
И нам требуется определить максимальную пропускную способность сети в целом, т.е. максимальное значение потока.
РЕШЕНИЕ:
Наша задача сводится к максимизации функции при некоторых ограничениях и решается с помощью линейного программирования.
Сначала задаем ограничения и нашу транспортную сеть в модель. Целевая функция стремится к максимуму. И далее с помощью метода solve() решаем нашу задачу.
Получаем значения пропускной способности для каждого из потоков и выбираем максимальный. 

	Задача о потоке минимальной стоимости(состоит в нахождении самого дешёвого способа передачи определённого количества потока через транспортную сеть)
Во втором задании дана транспортная сеть с количеством имеющегося продукта и их потребностями в продукте,
а также удельная стоимость транспортировки продукта(первое число над стрелками) и пропускная способность дуги(второе число над стрелками).
Требуется определить распределение потоков, при котором суммарная стоимость доставки минимальна.
РЕШЕНИЕ:
В данном случае задача сводится к минимизации функции при некоторых ограничениях и решается также с помощью линейного программирования.
Чтобы решить эту задачу, мы задаем ограничения на количество имеющегося продукта, на пропускную способность дуг
и задаем функцию для минимизации. Далее решаем задачу методом solve(). Получаем значения потраченных средств на передачу каждого потока и в соответсвии
 с функцией минимизации получаем значение минимальной цены передачи (равное 374).

	Задача о кратчайшем маршруте(задача поиска самого короткого пути (цепи) между двумя точками (вершинами) на графе)
В третьем задании дана транспортная система, в которой нужно определить кратчайший маршрут между узлами 1 и 7.
Задача сводится к определению минимума функции с ограничениями двух предыдущих задач.
РЕШЕНИЕ:
Задача сводится к определению минимума функции.
Сначала задаем матрицу смежности со значениями пути для каждого ребра. 
Далее ищем кратчайший путь с помощью алгоритма Дейкстры (функция dijkstra_path).
Далее ищем длину этого критического маршрута (функция dijkstra_path_length).

Алгори́тм Де́йкстры: Находит кратчайшие пути от одной из вершин графа до всех остальных и работает только для графов без рёбер отрицательного веса.
Суть: каждой вершине графа ставится метка - минимальное расстояние от текущей вершины до некоторой вершины А.
Далее лгоритм работает пошагово — на каждом шаге он «посещает» одну вершину и пытается уменьшать метки.
Тоесть мы берем первую вершину, идем во все ее соседи и присваиваем значения меток на каждой из соседних вершин. 
Далее идем через первую, некоторую вторую вершину и в соседнюю вершину для второй. Ищем сумму пройденных дуг и сравниваем с метками, полученными ранее.
Если полученное значение больше тех меток, то данная вершина не подходит. Ищем другую.
И так далее пока не дойдем до нужной вершины.






6. Лабораторная работа №6 
Решение задач стохастического программирования

Task1
1. Задачи стохастического программирования в ММ-формулировке
С помощью стохастического программирования (СП) (стохастической оптимизации) решаются задачи, целевая функция и (или) ограничения которых имеют вероятностный смысл. 
При MM формулировке задачи требутеся найти оптимальное значение целевой функции F, где в качестве коэффициентов используются математические ожидания. 
При такой постановке задача сводится к обычной задаче линейного программирования (путем замены.)
То есть по условию нам дана целевая функция и ограничения задачи. Также нам дана таблица, в которой за период 12 месяцев представлены данные о значениях коэффициентов целевой функции и параметрах ограничений задачи. И на основе этих данных мы ищем оптимальное значение целевой функции.
 (показываем в коде просто ограничения(add constraints), целевую функцию (она подписана как describe goal). Ну и потом в консоли вывод, типо min delivery cost(это и есть оптимальное значение для целевой функции).

2. Задачи с вероятностными ограничениями 
При таком подходе решения задачи, целевая функция также представлена как произведение математических ожиданий на значения x. Только здесь вероятность каждого ограничения должна быть не менее заданной величины beta 0 < beta < 1. 
В общем у нас есть система, в которой есть целевая функция и ограничения накладываемые на задачу. 
То есть мы вычитаем zi = Tbeta1 * sqrt((sum(D(aij) * xj^2 + D(bi)) от Bi
Это вносит изменения в исходную модель, а именно ресурсы bi уменьшаются на величину zi, т.е. следствием стохастичности модели является необходимость увеличения ресурсов именно на  величину    («плата за риск»). Из (6) видно, что на величины   влияют вероятностные характеристики параметров модели:
 D(aij) - дисперсии значений норм расхода;   
 D(bj) - дисперсии ресурсов. 

3. Задание такое же, только у нас beta1, beta2, beta3 = const.

